
KEY FEATURES:

> Diagnostics
> Reporting/Exporting (Scribble) => Needs Design
> Permissions => Claims Based
> Email Templates / Email Logging (Scribble)
> Workflow
> Additional Data Changes

NEXT:

> Consider excess property detection on API calls 

  public updateClaims<T extends UpdateUserGroupClaims>(body: T & { [K in keyof T as K extends keyof UpdateUserGroupClaims ? never : K]: never; }, options?: ApiOptions): Observable<UserGroup> {
    return this.apiService.request<UpdateUserGroupClaims, UserGroup>("PUT", "api/user-group/claims", body, options);
  }

> Allow tabbing on all fields
> Fix up validation logic/display - form service checks and processing server side errors - register active form with api (can we do it on active controller)
> Think about a user cache? GUID => Presentation Only
> Standardise date formats dd MMM yy (can we globalise the default - customisation service - user level customisations, formats, palettes, etc)

> Prime user table with passwords / enable administrator password resets
> Support Request Form Aria
> Optional fields on user / required inputs on user

> Check big dialogs for layout improvements
> Sample diagnostics
> Check fields against specification

> Auto collapse chrome on mobile (use javascript) - expanded = hover on mobile (or hide entirely on mobile and put in top button)
> First stab at history (just save 2 x json snapshot)

> EmailLog
> ActivityLog (Login, Key Operations etc)
> HistoryLog (Higher volumes, enrichment, periodic archive)

DONE:

> Login button spinner feedback [DONE]
> Date Popup needs to attach to the field [DONE]
> Required / invalid indicator on Date Picker input [DONE]
> Project : Submission more fields on grid [DONE]
> User Activity turn into a grid for now [DONE]
> Support Request Number [DONE]
> Support Provided Checkbox list (looks good and is easy to do!) [DONE]
> Sort Activity, Submission, Support by reverse date order [DONE]
> Sort Project, Support Request by reverse number [DONE]

> Change Support Request Funding Stream > Proposed Funding Stream / Name [DONE]
> Support Request Item/Researcher Rework [DONE]
> Sort out responsiveness [DONE]
> Dialog 2.0 [DONE]
> Grey out placeholders in custom controls [DONE]
> Allow disable on all fields [DONE]
> Forgotten password link on home page [DONE]
> Roll out CreatedAt [DONE]
> Prototype Other / Free Text fields [DONE]
> More complex grid search properly integrated into grid [DONE]
> Allow grid to save state in local storage [DONE] 
> More flexible/accurate form field layout (flex/grid => form-flex / form-grid) [DONE]
> Change Add Activity to My Activity (or put that on the dashboard)? [DONE]
> Move User Groups into Configuration [DONE]
> Remove Researchers entirely [DONE]
> Dialog widths [DONE]
> Fix Drop Down Text field to work better (customise backdrop opacity) [DONE]
> Support Request Filters/Improvements to table [DONE]
> Set Max Length on support request form input fields [DONE]
> To Right Buttons need some CSS work [DONE]


-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

> Deploy to Azure / Tenants / Connection Strings

> Validation / Errors 

> External Tools: Scribble / Excel etc

> Additional UI elements, tags, messages, chrome menus, 

> Scaffolding Setup / Static Data Setup

> Field label popup info ??

> Split out Chrome Sub Elements and have stand along side menu

-----

> Support Request Form (angular -> iframe)

> Long Running Processes (e.g. Reporting/Exporting)

> Chrome Navigation / Functionality Improvements

> Heuristic Search (VM based)

-----

[DONE]

> Static Data able to dynamically deal with different fields on the data (Optional: Hidden, FreeText, Description) [DONE]

> Drop Down Rework, Hidden Fields [DONE]

> Do away with StaticData.Code - we can use magic strings in Scribble and business logic sensitive data should use an enum or specific flags/hints (its a code smell) [DONE]

> Static Data which is also Static (rename Static to Enum / can put less in Static now we have Static Data)  [DONE]

> Login / Logout / Redirection [DONE]

> ApiStatic vs StaticData - i.e. how to use ApiStatic more effectively [DONE]

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

TimeAgo roll your own pipe

[JsonOptional] -- done?
[JsonReadOnly] 
Interfaces (with readonly properties)

[Service<T>()]

[TenantService<T>()]
[TenantService<T>("RSS London")] => IProjectValidationService (specialsed for each region)
 -> Lamba construction - always transient

 -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
